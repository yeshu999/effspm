# .github/workflows/build-and-publish.yml
name: Build & Publish Wheels

on:
  push:
    tags:
      - 'v*'           # only on version tags like v0.1.6
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        python-version: ['3.13']

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install build & publish tools
        run: |
          python -m pip install --upgrade pip setuptools wheel cibuildwheel twine

      - name: Build wheel (macOS)
        if: matrix.os == 'macos-latest'
        env:
          CIBW_SKIP:   'pp*'         # skip PyPy builds
          CIBW_BUILD:  'cp313*'      # only build CPython-3.13 wheels
          CIBW_ARCHS:  'arm64 universal2'
        run: python -m cibuildwheel --output-dir dist

      - name: Build wheel (Windows)
        if: matrix.os == 'windows-latest'
        env:
          CIBW_SKIP:  'pp*'
          CIBW_BUILD: 'cp313*'
          # no CIBW_ARCHS hereâ€”Windows will default to AMD64+x86
        run: python -m cibuildwheel --output-dir dist

      - name: Publish to PyPI
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN4 }}
        run: twine upload dist/*.whl --skip-existing
