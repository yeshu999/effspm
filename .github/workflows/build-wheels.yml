name: Build & Publish Wheels

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'        # publish when you push a tag like v0.1.27
  pull_request:
    branches: [ main ]

jobs:
  build_wheels:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, windows-2022, macos-14]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Host Python (only to run cibuildwheel/twine; does NOT affect target wheels)
      - name: Set up Python (host)
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install cibuildwheel
        run: |
          python -m pip install --upgrade pip
          pip install cibuildwheel==2.20.0

      - name: Build wheels
        env:
          CIBW_BUILD: "cp39-* cp310-* cp311-* cp312-* cp313-*"
          CIBW_SKIP: "pp* *-musllinux_*"
          CIBW_ARCHS_LINUX: "x86_64 i686"
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          CIBW_TEST_COMMAND: "python -c \"import effspm; print('import ok')\""
        run: python -m cibuildwheel --output-dir wheelhouse

      - name: Upload wheels as artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: wheelhouse/*.whl

      # Publish wheels only (no sdist), only once on Ubuntu, only on version tags
      - name: Publish wheels to PyPI (tags only, ubuntu)
        if: matrix.os == 'ubuntu-22.04' && startsWith(github.ref, 'refs/tags/v')
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN7 }}
        run: |
          python -m pip install --upgrade twine
          twine upload wheelhouse/*.whl --skip-existing
